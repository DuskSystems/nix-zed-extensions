name: sync

on:
  workflow_dispatch:
  push:
    branches: [main]
  schedule:
    - cron: "0 3 * * *"

concurrency:
  group: sync
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        with:
          determinate: false

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: nix-zed-extensions
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community

      - name: Sync extensions
        run: nix run .#nix-zed-extensions -- sync

      - name: Push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "$(date --utc --rfc-email)"
            git push
          fi

  build:
    needs: sync
    strategy:
      matrix:
        include:
          # x86_64-linux
          - runs-on: ubuntu-24.04
          # aarch64-linux
          - runs-on: ubuntu-24.04-arm
          # x86_64-darwin
          # - runs-on: macos-13
          # aarch64-darwin
          # - runs-on: macos-14
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        with:
          determinate: false

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: nix-zed-extensions
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community

      # NOTE: We only build one extension, since we only want to cache the common dependencies.
      - name: Build extension
        run: nix build .#zed-extensions.gleam --print-build-logs
