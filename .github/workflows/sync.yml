name: sync

on:
  workflow_dispatch:
  push:
    branches: [main]
  schedule:
    - cron: "0 3 * * *"

concurrency:
  group: sync
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Cache Nix
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-sync-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-sync-${{ runner.os }}-${{ runner.arch }}-

      - name: Sync extensions
        run: nix run .#nix-zed-extensions -- sync

      - name: Push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "$(date --utc --rfc-email)"
            git push
          fi

  test:
    needs: sync
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-24.04
          - runner: ubuntu-24.04-arm
          - runner: macos-13
          - runner: macos-14
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Cache Nix
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-test-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-test-${{ runner.os }}-${{ runner.arch }}-

      - name: Test extension
        run: nix build .#zed-extensions.nix
