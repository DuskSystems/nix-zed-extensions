--- a/cmake/wasi-sdk-toolchain.cmake
+++ b/cmake/wasi-sdk-toolchain.cmake
@@ -2,7 +2,6 @@
 # WebAssembly and build a WASI sysroot.

 set(LLVM_CMAKE_FLAGS "" CACHE STRING "Extra cmake flags to pass to LLVM's build")
-set(RUST_TARGET "" CACHE STRING "Target to build Rust code for, if not the host")
 set(WASI_SDK_ARTIFACT "" CACHE STRING "Name of the wasi-sdk artifact being produced")

 string(REGEX REPLACE "[ ]+" ";" llvm_cmake_flags_list "${LLVM_CMAKE_FLAGS}")
@@ -116,26 +115,6 @@
         USE_SOURCE_PERMISSIONS
         DESTINATION ${CMAKE_INSTALL_PREFIX})

-# Build logic for `wasm-component-ld` installed from Rust code.
-set(wasm_component_ld_root ${CMAKE_CURRENT_BINARY_DIR}/wasm-component-ld)
-set(wasm_component_ld ${wasm_component_ld_root}/bin/wasm-component-ld${CMAKE_EXECUTABLE_SUFFIX})
-set(wasm_component_ld_version 0.5.11)
-if(RUST_TARGET)
-  set(rust_target_flag --target=${RUST_TARGET})
-endif()
-add_custom_command(
-  OUTPUT ${wasm_component_ld}
-  COMMAND
-    cargo install --root ${wasm_component_ld_root} ${rust_target_flag}
-      wasm-component-ld@${wasm_component_ld_version}
-  COMMAND
-    cmake -E make_directory ${wasi_tmp_install}/bin
-  COMMAND
-    cmake -E copy ${wasm_component_ld} ${wasi_tmp_install}/bin
-  COMMENT "Building `wasm-component-ld` ...")
-add_custom_target(wasm-component-ld DEPENDS ${wasm_component_ld})
-add_dependencies(build wasm-component-ld)
-
 # Setup installation logic for CMake support files.
 add_custom_target(misc-files)
 add_dependencies(build misc-files)
